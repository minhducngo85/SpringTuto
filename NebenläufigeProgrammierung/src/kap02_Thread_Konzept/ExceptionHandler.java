package kap02_Thread_Konzept;/** * Codebeispiel für den eigenen Exception-Handler */import java.io.PrintWriter;import java.io.StringWriter;import java.util.logging.Level;import java.util.logging.Logger;class MyExceHandler implements Thread.UncaughtExceptionHandler{  public void uncaughtException(Thread t, Throwable e)  {    StringBuilder strBuilder = new StringBuilder();    strBuilder.append("Thread : " + t.getId() + " - " + t.getName());    strBuilder.append(System.lineSeparator());    strBuilder.append("Thread-Zustand : " + t.getState());    strBuilder.append(System.lineSeparator());    StringWriter writer = new StringWriter();    e.printStackTrace(new PrintWriter(writer));    strBuilder.append(writer.toString());    strBuilder.append(System.lineSeparator());    Logger logger = Logger.getAnonymousLogger();    logger.log(Level.SEVERE, strBuilder.toString());  }}class TaskWithException implements Runnable{  public void run()  {    int n = 1;    n /= 0; // Division durch 0 wird provoziert !    System.out.println(n);  }}public class ExceptionHandler{  public static void main(String[] args)  {    TaskWithException task = new TaskWithException();    Thread t = new Thread(task, "Worker");    // Setzt den Handler für den Thread    t.setUncaughtExceptionHandler(new MyExceHandler());    t.start();  }}