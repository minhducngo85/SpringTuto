package kap04_Elementare_Sync;/** * Codebeispiel für interrupt ohne Wirkung wegen eines IO-Blockierens */import java.io.InputStream;import java.net.ServerSocket;import java.net.Socket;public class IOBlockBsp{  static class CServer  {    public CServer()    {      // Erzeugt einen Server-Thread, der nur einen Socket      // Öffnet und wartet      System.out.println("Start server .... ");      Thread server = new Thread()      {        public void run()        {          ServerSocket serversocket = null;          try          {            serversocket = new ServerSocket(9999);            Socket client = serversocket.accept();            System.out.println(client + " akzeptiert");            synchronized (this)            {              wait(); // nichts tun            }            serversocket.close();          }          catch (Exception ex)          {            ex.printStackTrace();          }          finally          {            try            {              serversocket.close();            }            catch (Exception ex)            {            }          }        }      };      server.start();    }  }  static class CClient  {    public CClient()    {      try      {        Thread.sleep(100);        System.out.println("Start client .. ");        Socket socket = new Socket("localhost", 9999);        // Setze SoTimeout, sodass das Lesen        // blockierend ohne Timeout ist        socket.setSoTimeout(0);        final InputStream in = socket.getInputStream();        Thread client = new Thread()        {          public void run()          {            try            {              System.out.println("Client versucht zu lesen ...");              System.out.println(in.read());            }            catch (Exception ex)            {              ex.printStackTrace();              System.out.println("Lesefehler");            }          }        };        client.start();        // Client wecken mit interrupt - keine        // Wirkung wegen IO-Blocks        client.interrupt();        System.out.println("Warte ... ");        Thread.sleep(1000);        System.out.println("unterbricht IO");        in.close();        socket.close();      }      catch (Exception ex)      {        ex.printStackTrace();      }    }  }  public static void main(String[] args)  {    new CServer();    new CClient();  }}